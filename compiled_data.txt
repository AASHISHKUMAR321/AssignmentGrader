File: .dummy



File: problem1.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        function calculateSum(numbers)
        {
            let totalSum = 0;
            numbers.forEach(number =>{
                totalSum +=number;
            });

            return totalSum;
        }

        const numbers = [1, 2, 3, 4, 5];
        console.log(calculateSum(numbers)); // output = 15
    </script>
</body>
</html>

File: problem2.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <script>
      function groupedAndSortedStudents(students) {
        const groupByGread = students.reduce((acc, student) => {
            if(!acc[student.grade])
            {
                acc[student.grade] = [];
            }
            acc[student.grade].push(student);
            
            return acc;
        },{});

        Object.keys(groupByGread).forEach(grade=>{
            groupByGread[grade] = groupByGread[grade].sort((a,b) => a.age - b.age);
        })

        return groupByGread;
      }

      const students = [
        { name: "Alice", age: 18, gender: "Female", grade: 10 },
        { name: "Bob", age: 17, gender: "Male", grade: 11 },
        { name: "Charlie", age: 16, gender: "Male", grade: 10 },
        { name: "David", age: 17, gender: "Male", grade: 9 },
        { name: "Emma", age: 18, gender: "Female", grade: 11 },
        { name: "Frank", age: 16, gender: "Male", grade: 9 },
        { name: "Grace", age: 17, gender: "Female", grade: 10 },
      ];

    //   const groupedAndSortedStudents = groupAndSortStudents(students);
      console.log(groupedAndSortedStudents(students));
    </script>
  </body>
</html>


File: problem3.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <script>
      const storeData = {
        storeName: "TechWorld",
        location: "Metropolis",
        products: {
          electronicsSection: {
            inventory: {
              laptop: { available: 20, price: 800 },
              smartphone: { available: 30, price: 500 },
              tablet: { available: 15, price: 300 },
            },
            sales: [
              { id: 1, items: ["laptop", "tablet"], total: 1100 },
              { id: 2, items: ["smartphone", "tablet"], total: 800 },
              { id: 3, items: ["laptop", "smartphone"], total: 1300 },
            ],
          },
          clothingSection: {
            inventory: {
              shirt: { available: 50, price: 25 },
              jeans: { available: 40, price: 40 },
              dress: { available: 30, price: 60 },
            },
            sales: [
              { id: 1, items: ["shirt", "jeans"], total: 60 },
              { id: 2, items: ["dress", "shirt"], total: 85 },
              { id: 3, items: ["jeans", "dress"], total: 100 },
            ],
          },
        },
        sectionNames: ["electronicsSection", "clothingSection"],
      };

      function productDetails(storeData)
      {
        const{
            products:{
                electronicsSection:{
                    inventory:{
                        laptop:{available: laptopAvailable, price:laptopPrice},
                    },
                },
                clothingSection:{
                    inventory:{
                        shirt:{available:shirtAvailable, price:shirtPrice},
                    },
                },
            },
        } = storeData;
        return{
            laptopAvailable,
            shirtAvailable,
            laptopPrice,
            shirtPrice
        };
      }

      console.log(productDetails(storeData));
    </script>
  </body>
</html>


File: problem4.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        function filterAndMapEmployees(employees)
        {
            const filterEmp = employees.filter(employees=>
                employees.salary >= 50000 && 
                employees.department === 'Engineering' &&
                employees.age < 35
            ) 

            const mapEmp = filterEmp.map(employee =>({
                id:employee.id,
                name:employee.name,
                department:employee.department
            }))

            return [...mapEmp]
        }

        const employees = [
  { id: 1, name: 'Alice', department: 'Engineering', salary: 60000, age: 28 },
  { id: 2, name: 'Bob', department: 'HR', salary: 45000, age: 32 },
  { id: 3, name: 'Charlie', department: 'Engineering', salary: 55000, age: 40 }, // age is 40 taht is the reason he is not filtered 
  { id: 4, name: 'David', department: 'Marketing', salary: 48000, age: 33 },
  { id: 5, name: 'Emma', department: 'Engineering', salary: 70000, age: 29 },
];

console.log(filterAndMapEmployees(employees));

// this is your expected output but id:3 is not younger than 35 his age is 40 
// [  { id: 1, name: 'Alice', department: 'Engineering' },
//   { id: 3, name: 'Charlie', department: 'Engineering' },
//   { id: 5, name: 'Emma', department: 'Engineering' }
// ]
    </script>
</body>
</html>

File: problem5.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        function customSplice(arr, start, delteCount, ...eltoadd)
        {
            const remEl = [];

            for(let i=0; i<delteCount; i++)
            {
                if(start < arr.length)
                {
                    remEl.push(arr[start]);
                    arr.slice(start,1);
                }
            }
            for(var i = eltoadd.length-1; i>= 0; i--)
            {
                arr.splice(start,0,eltoadd[i]);
            }
            return remEl;
        }
        let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
        let remove = customSplice(arr, 3, 3, 0, 0);
        console.log(arr);
        console.log(remove)
    </script>
</body>
</html>

File: problem6.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <script>
      function countFileExtensions(files) {
        const extCount = {};

        files.forEach(file =>{
            const extension = file.split('.').pop().toLowerCase();

            extCount[extension] = (extCount[extension] || 0) +1;
        })
        return extCount;
      }

      const files = [
        "document1.pdf",
        "document2.pdf",
        "image1.png",
        "text1.txt",
        "photo1.jpg",
        "program1.exe",
        "data1.csv",
        "report1.pdf",
      ];

      console.log(countFileExtensions(files));
    </script>
  </body>
</html>


File: problem7.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <script>
      const originalData = {
        id: 101,
        name: "John Doe",
        department: "Engineering",
        address: {
          city: "New York",
          country: "USA",
        },
        salary: 50000,
      };

      const updateInfo = {
        name: "Jane Smith",
        address: {
          city: "Los Angeles",
          country: "USA",
        },
        salary: 60000,
      };

      function updateEmployees(originalData, updateInfo) {
        
      }
      console.log(originalData,updateInfo);
    </script>
  </body>
</html>


File: problem8.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        function rearrangeArray(numbers)
        {
            const removeNumbers = numbers.splice(0,3);

            numbers.push(...removeNumbers);

            return numbers;
        }

        const numbers = [1, 2, 3, 4, 5, 6, 7, 8];

        console.log(rearrangeArray(numbers));

    </script>
</body>
</html>

